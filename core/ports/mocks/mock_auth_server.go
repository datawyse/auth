// Code generated by MockGen. DO NOT EDIT.
// Source: core/ports/auth_server.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthServerService is a mock of AuthServerService interface.
type MockAuthServerService struct {
	ctrl     *gomock.Controller
	recorder *MockAuthServerServiceMockRecorder
}

// MockAuthServerServiceMockRecorder is the mock recorder for MockAuthServerService.
type MockAuthServerServiceMockRecorder struct {
	mock *MockAuthServerService
}

// NewMockAuthServerService creates a new mock instance.
func NewMockAuthServerService(ctrl *gomock.Controller) *MockAuthServerService {
	mock := &MockAuthServerService{ctrl: ctrl}
	mock.recorder = &MockAuthServerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthServerService) EXPECT() *MockAuthServerServiceMockRecorder {
	return m.recorder
}

// AccessToken mocks base method.
func (m *MockAuthServerService) AccessToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccessToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccessToken indicates an expected call of AccessToken.
func (mr *MockAuthServerServiceMockRecorder) AccessToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccessToken", reflect.TypeOf((*MockAuthServerService)(nil).AccessToken))
}
